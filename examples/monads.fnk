export moon

import '../../libs/math.js' { sin }
import '../../flow-libs/ast-types.js' { type Identifier, type Node }

export
type Foom = {
    fomm: number
}

type LocalNON = {
    fomm: number
}

moon :: string -> Node
moon = name -> {
    return {
        type: "Identifier",
        name: moonit(name),
        start: 0,
        end: 0,
        loc: {
         end: {column: 0, line: 0},
         start: {column: 0, line: 0}
       }
    }

}

nameit :: string -> string
moonit = concat('moon')


