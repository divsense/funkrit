Eff<A> := () -> A
IO<A> := {
    run: Eff<A>,
    pure(A): IO<A>,
    map1<B>(?(A) -> B): IO<B>,
    map<B>((A) -> B): IO<B>,
    chain1: ?Func1,
    chain: ?Func2<A>
}

IO :: Eff<A> -> IO<A>
IO = run -> ({
    run,
    pure: pureIO,
    map: f -> IO $ f . run,
    chain: f -> IO $ runIO . f . run,
    ap: mv -> IO $ () -> runIO $ map(run(), mv)
})

pureIO :: a -> IO a
pureIO = a -> IO $ () -> a

runIO :: IO a -> a
runIO = call . prop('run')

